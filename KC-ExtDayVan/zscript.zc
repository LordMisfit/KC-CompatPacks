version "4.10"

class WaterActivation : KCHealthBoostItem
{
	default
	{
		Radius 24;
		Height 64;
		MONSTER;
		-SHOOTABLE;
		-COUNTKILL;
		+THRUACTORS;
		Speed 0;
		MaxTargetRange 150;
		Scale 0.6;
		KCHealthBoostItem.healpercent 0.01; // 0.01
		KCHealthBoostItem.healfixedrand1 0;
		KCHealthBoostItem.healfixedrand2 2;
		KCHealthBoostItem.healstring "You drank some water.";
		KCHealthBoostItem.healsound1 "SLURPING";
		KCHealthBoostItem.healsound2 "Tea/Sipping";
	}

	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A 0
			{
				bFRIENDLY = false; 
				bISMONSTER = false; 
				actor player = players[0].mo;
				if (player)
				{
					if (!target)
					{
						if (target != player) target = player;
					}
				}
			}
			TNT1 A 30;
			TNT1 A 0 A_JumpIfInTargetLOS("Active", 30, JLOSF_DEADNOJUMP, 50);
			//TNT1 A 0 A_JumpIFCloser(50, "CheckActivation");
			TNT1 A 0 A_NoBlocking();
			TNT1 A 0 A_Scream();
			Stop;
		Active:
			TNT1 A 1
			{
				A_NoBlocking();
				A_Scream();
				bUSESPECIAL = false;
				//Console.Printf("#R#R");
			}
			TNT1 A 1
			{
				double healthgain = healamt;
				actor player = players[0].mo;
				let MiscItem = PlayerStatItem(Player.FindInventory("PlayerStatItem"));
				
				if (target && target == player)
				{
					//Console.Printf("target");
					int temp1 = player.health;
					int oldhealth = player.health;
					int temp2 = (player.CountInv("PlayerMaxHP") * 1);
					int temp3 = player.CountInv("PlayerMaxHP");
					temp3 *= healthgain;
					temp3 += random(healamt2rand1,healamt2rand2);
					if (temp1 < temp2)
					{
						if (temp3 < 1) temp3 = 1;
						temp1 += temp3;
						
						if (temp1 > temp2) temp1 = temp2;
						player.health = temp1;
						int healdiff = player.health - oldhealth;
						if (healdiff) A_RecoverHUD(healdiff, 0, true);
						if (MiscItem) MiscItem.HPRegenBoostTimer += (randompick(9,10,10,11,11,12,13) * (temp3 * 100));
						
						// PP restoration [since drinking water at least SLIGHTLY restores PP in EB, LUL :V]
						if (A_CheckForHeiwaPlayer())
						{
							int PPHealAmt;
							if (MiscItem.CurrentPsychicPoints < MiscItem.MaxPsychicPoints)
							{
										 if (MiscItem.TruePlayerLevel >= 75) PPHealAmt = randompick(9,10,11,11,12,12,13,13,14,15);
								else if (MiscItem.TruePlayerLevel >= 25) PPHealAmt = randompick(2,3,4,4,5,5,6,6,7,8);
																										else PPHealAmt = randompick(0,0,1,1,1,1,1,1,2,2);
								MiscItem.PPRegenBoostTimer += (randompick(9,10,10,11,11,12,13) * (PPHealAmt * 50));
								MiscItem.CurrentPsychicPoints += PPHealAmt;
								if (MiscItem.CurrentPsychicPoints > MiscItem.MaxPsychicPoints) MiscItem.CurrentPsychicPoints = MiscItem.MaxPsychicPoints;
							}
						}
						
						if (MiscItem && MiscItem.CanTalkUnderwater)
						{
							double maskpitch = 1.00;
							if (waterlevel >= 3 && MiscItem.CanTalkUnderwater >= 2) maskpitch *= 1.259921885;
							player.A_StopSound(CHAN_VOICE);
							player.A_StartSound(sound2,CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM,maskpitch);
						}
						player.A_SetBlend("f1 ff f1",0.1,(random(2,3) * (temp3 * 5)));
						
						A_StartSound(sound1, CHAN_BODY);
						Console.Printf("%s Health + %d", foodquote, temp3);
					}
				}
			}
			TNT1 A 100;
			Stop;
	}
}

class FoodDonuts : KCHealthBoostItem
{
	default
	{
		//$Category Food_Items
		KCHealthBoostItem.healpercent 0.01; // 0.01
		KCHealthBoostItem.healfixedrand1 6; // +6
		KCHealthBoostItem.healfixedrand2 6; // +6
		KCHealthBoostItem.healstring "You ate a Donut.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
		Radius 4;
		Height 4;
		+USESPECIAL;
		Speed 0;
		Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial;
		Scale 0.6;
	}
	
	void A_FirstAction()
	{
		A_NoBlocking();
		A_Scream();
		bUSESPECIAL = false;
		A_StartSound(sound1, CHAN_BODY);
	}
	
	void A_EatFood()
	{
		double healthgain = healamt;
		actor player = players[0].mo;
		let MiscItem = PlayerStatItem(Player.FindInventory("PlayerStatItem"));
		
		int temp1 = player.health;
		int oldhealth = player.health;
		int temp2 = (player.CountInv("PlayerMaxHP") * 2);
		int temp3 = player.CountInv("PlayerMaxHP");
		temp3 *= healthgain;
		temp3 += random(healamt2rand1,healamt2rand2);
		//Console.Printf("temp3: %d, healamt: %.8f", temp3, healthgain);
		if (temp1 < temp2)
		{
			if (temp3 < 1) temp3 = 1;
			temp1 += temp3;
			//Console.Printf("temp3: %d, healamt: %.8f", temp3, healthgain);
			
			if (temp1 > temp2) temp1 = temp2;
			player.health = temp1;
			int healdiff = player.health - oldhealth;
			if (healdiff) A_RecoverHUD(healdiff, 0, true);
			if (MiscItem) MiscItem.HPRegenBoostTimer += (randompick(9,10,10,11,11,12,13) * (temp3 * 100));
			
			if (MiscItem && MiscItem.CanTalkUnderwater)
			{
				double maskpitch = 1.00;
				if (waterlevel >= 3 && MiscItem.CanTalkUnderwater >= 2) maskpitch *= 1.259921885;
				player.A_StopSound(CHAN_VOICE);
				player.A_StartSound(sound2,CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM,maskpitch);
			}
			player.A_SetBlend("f1 ff f1",0.1,(random(2,3) * (temp3 * 5)));
		}
		Console.Printf("%s Health + %d", foodquote, temp3);
	}
	
	States
	{
		Spawn:
			FOD1 A 1;
			FOD1 A -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodCofee : FoodDonuts
{
	default
	{
		Scale 0.6;
		KCHealthBoostItem.healpercent 0.02; // 0.02
		KCHealthBoostItem.healfixedrand1 10; // +6
		KCHealthBoostItem.healfixedrand2 14; // +6
		KCHealthBoostItem.healstring "You drank some coffee.";
		KCHealthBoostItem.healsound1 "SLURPING";
		KCHealthBoostItem.healsound2 "Tea/Sipping";
	}
	
	States
	{
		Spawn:
			FOD1 B 1;
			FOD1 B -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodSalad1 : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.02; // 0.02
		KCHealthBoostItem.healfixedrand1 15; // +6
		KCHealthBoostItem.healfixedrand2 21; // +6
		KCHealthBoostItem.healstring "You ate some salad.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 C 1;
			FOD1 C -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodSalad2 : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.02; // 0.02
		KCHealthBoostItem.healfixedrand1 15; // +6
		KCHealthBoostItem.healfixedrand2 21; // +6
		KCHealthBoostItem.healstring "You ate some salad.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 D 1;
			FOD1 D -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodLobster: FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.1; // 0.1
		KCHealthBoostItem.healfixedrand1 75; // +6
		KCHealthBoostItem.healfixedrand2 105; // +6
		KCHealthBoostItem.healstring "You ate some yummy Lobster.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 E 1;
			FOD1 E -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodShank : FoodDonuts 
{
	default
	{
		Scale 0.5;
		KCHealthBoostItem.healpercent 0.06; // 0.06
		KCHealthBoostItem.healfixedrand1 45; // +6
		KCHealthBoostItem.healfixedrand2 75; // +6
		KCHealthBoostItem.healstring "You ate some Pork Shanks.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 F 1;
			FOD1 F -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodPork : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.1; // 0.1
		KCHealthBoostItem.healfixedrand1 75; // +6
		KCHealthBoostItem.healfixedrand2 105; // +6
		KCHealthBoostItem.healstring "You ate a large Pork Dish.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 G 1;
			FOD1 G -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodCheese : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.08; // 0.03
		KCHealthBoostItem.healfixedrand1 47; // +6
		KCHealthBoostItem.healfixedrand2 77; // +6
		KCHealthBoostItem.healstring "You ate some delicious cheese.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 H 1;
			FOD1 H -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodPizza : FoodDonuts 
{
	default
	{
		Scale 1.0;
		KCHealthBoostItem.healpercent 0.24; // 0.04
		KCHealthBoostItem.healfixedrand1 275; // +6
		KCHealthBoostItem.healfixedrand2 325; // +6
		KCHealthBoostItem.healstring "You ate a large pizza.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 I 1;
			FOD1 I -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodPizzaSlice : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.03; // 0.01
		KCHealthBoostItem.healfixedrand1 34; // +6
		KCHealthBoostItem.healfixedrand2 41; // +6
		KCHealthBoostItem.healstring "You ate a slice of pizza.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 Q 1;
			FOD1 Q -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodShank2: FoodDonuts
{
	default
	{
		Scale 0.6;
		KCHealthBoostItem.healpercent 0.08;
		KCHealthBoostItem.healfixedrand1 47; // +6
		KCHealthBoostItem.healfixedrand2 77; // +6
		KCHealthBoostItem.healstring "You ate a large Pork Shank.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 K 1;
			FOD1 K -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodFish1 : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.06;
		KCHealthBoostItem.healfixedrand1 45; // +6
		KCHealthBoostItem.healfixedrand2 75; // +6
		KCHealthBoostItem.healstring "You ate a whole fish.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 L 1;
			FOD1 L -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}


class FoodBaguette : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.06;
		KCHealthBoostItem.healfixedrand1 45; // +6
		KCHealthBoostItem.healfixedrand2 75; // +6
		KCHealthBoostItem.healstring "You ate a baguette.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 M 1;
			FOD1 M -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodChickenLegs : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.06;
		KCHealthBoostItem.healfixedrand1 45; // +6
		KCHealthBoostItem.healfixedrand2 75; // +6
		KCHealthBoostItem.healstring "You ate some chicken legs.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 N 1;
			FOD1 N -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodShrimp : FoodDonuts
{
	default
	{
		Scale 0.6;
		KCHealthBoostItem.healpercent 0.04;
		KCHealthBoostItem.healfixedrand1 23; // +6
		KCHealthBoostItem.healfixedrand2 37; // +6
		KCHealthBoostItem.healstring "You ate some shrimp.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 O 1;
			FOD1 O -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodChocolate : FoodDonuts
{
	default
	{
		Scale 0.6;
		KCHealthBoostItem.healpercent 0.02; // 0.01
		KCHealthBoostItem.healfixedrand1 15; // +6
		KCHealthBoostItem.healfixedrand2 21; // +6
		KCHealthBoostItem.healstring "You ate a chocolate bar.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 P 1;
			FOD1 P -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodPuding : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.02; // 0.01
		KCHealthBoostItem.healfixedrand1 10; // +6
		KCHealthBoostItem.healfixedrand2 14; // +6
		KCHealthBoostItem.healstring "You ate some pudding.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 R 1;
			FOD1 R -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodBanana : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.04; // 0.02
		KCHealthBoostItem.healfixedrand1 23; // +6
		KCHealthBoostItem.healfixedrand2 37; // +6
		KCHealthBoostItem.healstring "You ate a banana.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 S 1;
			FOD1 S -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodTurkey : FoodDonuts 
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.24; // 0.12
		KCHealthBoostItem.healfixedrand1 275; // +6
		KCHealthBoostItem.healfixedrand2 325; // +6
		KCHealthBoostItem.healstring "You ate a whole Turkey.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 T 1;
			FOD1 T -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodChicken : FoodDonuts 
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.12; // 0.06
		KCHealthBoostItem.healfixedrand1 138; // +6
		KCHealthBoostItem.healfixedrand2 163; // +6
		KCHealthBoostItem.healstring "You ate a whole chicken.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 U 1;
			FOD1 U -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodHotDog : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.03; // 0.01
		KCHealthBoostItem.healfixedrand1 138; // +6
		KCHealthBoostItem.healfixedrand2 163; // +6
		KCHealthBoostItem.healstring "You ate a hot dog.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 V 1;
			FOD1 V -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodSteak : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.18; // 0.06
		KCHealthBoostItem.healstring "You ate a big steak.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 W 1;
			FOD1 W -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodRamen : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.025; // 0.1
		KCHealthBoostItem.healstring "You ate some ramen.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 X 1;
			FOD1 X -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}
class FoodSushiBig : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.105; // 0.06
		KCHealthBoostItem.healstring "You ate a lot of sushi.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 Y 1;
			FOD1 Y -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodSushiSmall : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.035; // 0.02
		KCHealthBoostItem.healstring "You ate some sushi.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD1 Z 1;
			FOD1 Z -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodBurger : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.06; // 0.03
		KCHealthBoostItem.healstring "You ate a whole burger.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD2 A 1;
			FOD2 A -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodFries : FoodDonuts
{
	default
	{
		Scale 0.6;
		KCHealthBoostItem.healpercent 0.03; // 0.01
		KCHealthBoostItem.healfixedrand1 34; // +6
		KCHealthBoostItem.healfixedrand2 41; // +6
		KCHealthBoostItem.healstring "You ate some fries.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD2 B 1;
			FOD2 B -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodPineApple : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.03; // 0.03
		KCHealthBoostItem.healfixedrand1 34; // +6
		KCHealthBoostItem.healfixedrand2 41; // +6
		KCHealthBoostItem.healstring "You ate a whole pineapple.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD2 C 1;
			FOD2 C -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodLunch : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.025; // 0.01
		KCHealthBoostItem.healfixedrand1 18; // +6
		KCHealthBoostItem.healfixedrand2 24; // +6
		KCHealthBoostItem.healstring "You ate a small sandwich.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD2 D 1;
			FOD2 D -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodAplle : FoodDonuts
{
	default
	{
		Scale 0.8;
		KCHealthBoostItem.healpercent 0.05; // 0.01
		KCHealthBoostItem.healfixedrand1 36; // +6
		KCHealthBoostItem.healfixedrand2 48; // +6
		KCHealthBoostItem.healstring "You ate an apple.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD2 E 1;
			FOD2 E -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class FoodCake : FoodDonuts
{
	default
	{
		Scale 1.0;
		KCHealthBoostItem.healpercent 0.40; // 0.08
		KCHealthBoostItem.healfixedrand1 450; // +6
		KCHealthBoostItem.healfixedrand2 550; // +6
		KCHealthBoostItem.healstring "You ate an entire birthday cake.";
		KCHealthBoostItem.healsound1 "EATING";
		KCHealthBoostItem.healsound2 "Heiwa/Eat";
	}
	
	States
	{
		Spawn:
			FOD2 F 1;
			FOD2 F -1;
			Stop;
		Active:
			TNT1 A 0 A_FirstAction();
			TNT1 A 1 A_EatFood();
			TNT1 A 100;
			Stop;
	}
}

class TabbleLight : KCVaccableObject 
{
	default
	{
		// $Sprite "LECMA0"
		Radius 16;
		Height 16;
		Health 10;
		Mass 200;
		DeathSound "world/glassbreak";
		+SOLID;
		+NOBLOOD;
		+PUSHABLE;
		+SHOOTABLE;
	}
	
	States
	{
		Spawn:
			LECM A -1;
			Stop;
		Death:
			NULL A 0 A_Scream();
			NULL AAAAAA 0 A_SpawnProjectile("SFXGlassParticle1", 32, 0, random (0, 360), 2, random (0, 360));
			LECM BCD 5;
			LECM D -1;
			stop;
	}
}

class FlowerPot : TabbleLight
{
	default
	{
		Scale 0.5;
		// $Sprite "FLWRA0"
	}
	
	States
	{
		Spawn:
			FLWR A -1;
			Stop;
		Death:
			NULL A 0 A_Scream;
			TNT1 AAAA 0 A_SpawnProjectile ("SFXBrownPieceParticle", 20, 0, random (0, 360), 2, random (40, 80));
			TNT1 AA 0 A_SpawnProjectile ("SFXFlowerpot1Part1", 20, 0, random (0, 360), 2, random (40, 80));
			TNT1 A 0 A_SpawnProjectile ("SFXFlowerpot1Part2", 20, 0, random (0, 360), 2, random (40, 80));
			TNT1 A 0 A_SpawnProjectile ("SFXFlowerpot1Part3", 20, 0, random (0, 360), 2, random (40, 80));
			TNT1 A 0;
			stop;
		}
}

class Trashcan1 : FlowerPot
{
	default
	{
		Radius 8;
		Height 16;
		Scale 0.6;
		Deathsound "METDIE";
		Mass 200;
		Health 50;
		+PUSHABLE;
	}
	
	void A_TrashBreak(int type)
	{
		actor player = players[0].mo;
		let MiscItem = PlayerStatItem(Player.FindInventory("PlayerStatItem"));
		
		double posxmin, posymin, poszmin;
		double posxmax, posymax, poszmax;
		double velxmin, velymin, velzmin;
		double velxmax, velymax, velzmax;
		double angmin, angmax;
		posxmin = -4.0;
		posxmax = 4.0;
		posymin = -4.0;
		posymax = 4.0;
		poszmin = -4.0;
		poszmax = 4.0;
		velxmin = -4.0;
		velxmax = 4.0;
		velymin = 10.0;
		velymax = 40.0;
		velzmin = 0;
		velzmax = 0;
		angmin = frandom(0,360);
		angmax = frandom(0,360);
		
		int rarestfactor = 131072; // 1048576;
		int rarerfactor = 16384; // 131072;
		int rarefactor = 2048; // 16384;
		int semicommonfactor = 512; // 4096;
		int somewhatcommonfactor = 128; // 1024;
		int commonfactor = 32; // 256;
		int verycommonfactor = 4; // 32;
		int extremelycommonfactor = randompick(1,1,1,1,1,1,1,1,2);
		
		if (type >= 1)
		{
			rarestfactor *= 2.0;
			rarerfactor *= 1.875;
			rarefactor *= 1.75;
			semicommonfactor *= 1.625;
			somewhatcommonfactor *= 1.5;
			commonfactor *= 1.375;
			verycommonfactor *= 1.25;
			extremelycommonfactor *= 1.125;
		}
		
		if (random(1,rarestfactor) <= 1) 
		{
			A_SpawnItemEx("TSArtifactSpawner", frandom(posxmin,posxmax), frandom(posymin,posymax), frandom(posymin,poszmax), frandom(velxmin,velxmax), frandom(velymin,velymax), frandom(velzmin,velzmax), frandom(angmin,angmax), SXF_NOCHECKPOSITION);
		}
		if (random(1,rarerfactor) <= 1) 
		{
			A_SpawnItemEx("SpecialBackPack", frandom(posxmin,posxmax), frandom(posymin,posymax), frandom(posymin,poszmax), frandom(velxmin,velxmax), frandom(velymin,velymax), frandom(velzmin,velzmax), frandom(angmin,angmax), SXF_NOCHECKPOSITION);
		}
		if (random(1,rarefactor) <= 1) 
		{
			int user_type = random(1,20);
			string spawntype;
			if (user_type >= 1 && user_type <= 4) spawntype = "VitalCapsule";
			if (user_type >= 5 && user_type <= 8)  spawntype = "SpeedCapsule";
			if (user_type >= 9 && user_type <= 12) spawntype = "IQCapsule";
			if (user_type >= 13 && user_type <= 16) spawntype = "GutsCapsule";
			if (user_type >= 17 && user_type <= 20) spawntype = "LuckCapsule";
			A_SpawnItemEx(spawntype, frandom(posxmin,posxmax), frandom(posymin,posymax), frandom(posymin,poszmax), frandom(velxmin,velxmax), frandom(velymin,velymax), frandom(velzmin,velzmax), frandom(angmin,angmax), SXF_NOCHECKPOSITION);
		}
		if (random(1,semicommonfactor) <= 1)
		{
			int user_type = random(1,5);
			string spawntype;
			if (user_type == 1) spawntype = "TommyGunModpack";
			if (user_type == 2) spawntype = "BlasterRifleModpack";
			if (user_type == 3) spawntype = "BlasterPistolModpack";
			if (user_type == 4) spawntype = "DevastatorModpack";
			if (user_type == 5) spawntype = "RiotGunModpack";
			A_SpawnItemEx(spawntype, frandom(posxmin,posxmax), frandom(posymin,posymax), frandom(posymin,poszmax), frandom(velxmin,velxmax), frandom(velymin,velymax), frandom(velzmin,velzmax), frandom(angmin,angmax), SXF_NOCHECKPOSITION);
		}
		if (random(1,somewhatcommonfactor) <= 1)
		{
			int user_type = random(1,22);
			string spawntype;
			if (user_type >= 1 && user_type <= 2) spawntype = "Glock21";
			if (user_type >= 3 && user_type <= 4) spawntype = "BlasterPickup";
			if (user_type >= 5 && user_type <= 6) spawntype = "RiotGun";
			if (user_type >= 7 && user_type <= 8) spawntype = "TommyGun";
			if (user_type >= 9 && user_type <= 10) spawntype = "BlasterRifle";
			if (user_type >= 11 && user_type <= 12) spawntype = "Devastator";
			if (user_type >= 13 && user_type <= 14) spawntype = "Deviation";
			if (user_type >= 13 && user_type <= 16) spawntype = "TeslaCannon";
			if (user_type >= 17 && user_type <= 18) spawntype = "BHGen";
			if (user_type >= 19 && user_type <= 20) spawntype = "SawThrower";
			if (user_type >= 21 && user_type <= 22) spawntype = "ImpalerXBow";
			A_SpawnItemEx(spawntype, frandom(posxmin,posxmax), frandom(posymin,posymax), frandom(posymin,poszmax), frandom(velxmin,velxmax), frandom(velymin,velymax), frandom(velzmin,velzmax), frandom(angmin,angmax), SXF_NOCHECKPOSITION);
		}
		if (random(1,commonfactor) <= 1)
		{
			int user_type = random(1,22);
			string spawntype;
			if (user_type >= 1 && user_type <= 2) spawntype = "ClipBox";
			if (user_type >= 3 && user_type <= 4) spawntype = "CellPack";
			if (user_type >= 5 && user_type <= 6) spawntype = "ShellBox";
			if (user_type >= 7 && user_type <= 8) spawntype = "TommAmmoBig";
			if (user_type >= 9 && user_type <= 10) spawntype = "CellPack";
			if (user_type >= 11 && user_type <= 12) spawntype = "MiniRocketBox";
			if (user_type >= 13 && user_type <= 14) spawntype = "RocketBox";
			if (user_type >= 13 && user_type <= 16) spawntype = "BoltsLarge";
			if (user_type >= 17 && user_type <= 18) spawntype = "CellPack";
			if (user_type >= 19 && user_type <= 20) spawntype = "SawBox";
			if (user_type >= 21 && user_type <= 22) spawntype = "ImpalerBoltsBig";
			A_SpawnItemEx(spawntype, frandom(posxmin,posxmax), frandom(posymin,posymax), frandom(posymin,poszmax), frandom(velxmin,velxmax), frandom(velymin,velymax), frandom(velzmin,velzmax), frandom(angmin,angmax), SXF_NOCHECKPOSITION);
		}
		if (random(1,verycommonfactor) <= 1)
		{
			int user_type = random(1,22);
			string spawntype;
			if (user_type >= 1 && user_type <= 2) spawntype = "Clip";
			if (user_type >= 3 && user_type <= 4) spawntype = "Cell";
			if (user_type >= 5 && user_type <= 6) spawntype = "Shell";
			if (user_type >= 7 && user_type <= 8) spawntype = "TommAmmo";
			if (user_type >= 9 && user_type <= 10) spawntype = "Cell";
			if (user_type >= 11 && user_type <= 12) spawntype = "MiniRockets";
			if (user_type >= 13 && user_type <= 14) spawntype = "Rocket";
			if (user_type >= 13 && user_type <= 16) spawntype = "Bolts";
			if (user_type >= 17 && user_type <= 18) spawntype = "CellPack";
			if (user_type >= 19 && user_type <= 20) spawntype = "Saws";
			if (user_type >= 21 && user_type <= 22) spawntype = "ImpalerBolts";
			A_SpawnItemEx(spawntype, frandom(posxmin,posxmax), frandom(posymin,posymax), frandom(posymin,poszmax), frandom(velxmin,velxmax), frandom(velymin,velymax), frandom(velzmin,velzmax), frandom(angmin,angmax), SXF_NOCHECKPOSITION);
		}
		if (random(1,extremelycommonfactor) <= 1)
		{
			int randrolls2 = randompick(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,3,3,4) * 2;
			for (int i; i < randrolls2; i++)
			{
				int randrolls = randompick(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,3,3,4);
				for (int i; i < randrolls; i++)
				{
					int user_type = random(1,22);
					string spawntype;
					if (user_type >= 1 && user_type <= 10) spawntype = "ArmorBonus2";
					if (user_type >= 11 && user_type <= 20) spawntype = "HealthBonus2";
					if (user_type >= 21 && user_type <= 21) spawntype = "ArmorBonusBig";
					if (user_type >= 22 && user_type <= 22) spawntype = "HealthBonusBig";
					A_SpawnItemEx(spawntype, frandom(posxmin,posxmax), frandom(posymin,posymax), frandom(posymin,poszmax), frandom(velxmin,velxmax), frandom(velymin,velymax), frandom(velzmin,velzmax), frandom(angmin,angmax), SXF_NOCHECKPOSITION);
				}
				randrolls = randompick(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,3,3,4);
				for (int i; i < randrolls; i++)
				{
					int user_type = random(1,22);
					string spawntype;
					if (user_type >= 1 && user_type <= 10) spawntype = "ArmorBonus2";
					if (user_type >= 11 && user_type <= 20) spawntype = "HealthBonus2";
					if (user_type >= 21 && user_type <= 21) spawntype = "ArmorBonusBig";
					if (user_type >= 22 && user_type <= 22) spawntype = "HealthBonusBig";
					A_SpawnItemEx(spawntype, frandom(posxmin,posxmax), frandom(posymin,posymax), frandom(posymin,poszmax), frandom(velxmin,velxmax), frandom(velymin,velymax), frandom(velzmin,velzmax), frandom(angmin,angmax), SXF_NOCHECKPOSITION);
				}
			}
		}
		
		if (type <= 0) // TrashCans
		{
			A_SpawnProjectile ("SFXGarbageParticle1", 10, 0, random (0, 360), 2, random (10, 40));
			A_SpawnProjectile ("SFXGarbageParticle2", 10, 0, random (0, 360), 2, random (10, 40));
			A_SpawnProjectile ("SFXGarbageParticle3", 10, 0, random (0, 360), 2, random (10, 40));
			A_SpawnProjectile ("SFXGarbageParticle5", 10, 0, random (0, 360), 2, random (10, 40));
			A_SpawnProjectile ("SFXGarbageParticle6", 0, 0, random (0, 360), 2, random (10, 40));
			A_SpawnProjectile ("SFXShrapnelParticle2", 30, 0, random (0, 360), 2, random (30, 60));
			A_SpawnProjectile ("SFXShrapnelParticle1", 30, 0, random (0, 360), 2, random (30, 60));
			A_SpawnProjectile ("SFXShrapnelParticle3", 30, 0, random (0, 360), 2, random (30, 60));
			A_SpawnProjectile ("SFXShrapnelParticle4", 30, 0, random (0, 360), 2, random (30, 60));
		}
		if (type >= 1) // TrashBags
		{
			A_SpawnProjectile ("SFXGarbageParticle1", 10, 0, random (0, 360), 2, random (10, 40));
			A_SpawnProjectile ("SFXGarbageParticle2", 10, 0, random (0, 360), 2, random (10, 40));
			A_SpawnProjectile ("SFXGarbageParticle3", 10, 0, random (0, 360), 2, random (10, 40));
			A_SpawnProjectile ("SFXGarbageParticle5", 10, 0, random (0, 360), 2, random (10, 40));
			A_SpawnProjectile ("SFXGarbageParticle6", 0, 0, random (0, 360), 2, random (10, 40));
		}
	}
	
	states
	{
		Spawn:
			UTRS A 1;
			UTRS A -1;
			Stop;
		Death:
			TNT1 A 0
			{
				A_Stop();
				A_TrashBreak(0);
			}
			UTRD A 1 A_Scream();
			UTRD A -1;
			Stop;
	}
}

class Trashcan2 : Trashcan1 
{
	states
	{
		Spawn:
			UTRS B 1;
			UTRS B -1;
			Stop;
		Death:	
			TNT1 A 0
			{
				A_Stop();
				A_TrashBreak(0);
			}
			UTRB B 1 A_Scream();
			UTRB B -1;
			Stop;
	}
}

class Trashcan3 : Trashcan1
{
	states
	{
		Spawn:
			UTRS D 1;
			UTRS D -1;
			Stop;
		
		Death:	
			TNT1 A 0
			{
				A_Stop();
				A_TrashBreak(0);
			}
			UTRD A 1 A_Scream();
			UTRD A -1;
			Stop;
	}
}

class Trashcan6 : Trashcan1 
{
	states
	{
		Spawn:
			UTRS F 1;
			UTRS F -1;
			Stop;
			
		Death:
			TNT1 A 0
			{
				A_Stop();
				A_TrashBreak(0);
			}
			UTRD A 1 A_Scream();
			UTRD A -1;
			Stop;
	}
}

class TrashBag : Trashcan1
{
	default
	{
		Radius 12;
		Height 16;
		Deathsound "DSBRK2";
		Scale 0.4;
	}
	states
	{
		Spawn:
			UTRS C 1;
			UTRS C -1;
			Stop;
	
		Death:	
			TNT1 A 0
			{
				A_Stop();
				A_TrashBreak(1);
			}
			UTRD C 1 A_Scream();
			UTRD C -1;
			Stop;
	}
}

class RocketInvis : RocketBase
{
	default
	{
		Tag "Rocket";
		Radius 11;
		Height 8;
		Speed 20;
		Damage 20;
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+ROCKETTRAIL;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "$OB_MPROCKET"; // "%o rode %k's rocket."
	}
	
	States
	{
		Spawn:
			TNT1 A 0 Bright;
			Loop;
		Death:
			TNT1 A 0 
			{
				A_StartSound("weapons/rocklx",CHAN_7);
				A_Quake(1, 4, 0, 512, "nosound/silent");
				A_Quake(4, 4, 0, 256, "nosound/silent");
			}
			MISL B 8 Bright A_Explode();
			MISL C 6 Bright;
			MISL D 4 Bright;
			Stop;
	}
}

class ExplosiveBarrelInvis : ExplosiveBarrelNew
{
	default
	{
		-PUSHABLE
		Tag "Explosive Barrel";
		DamageType "Explosive";
		DamageFactor "Dashing", 0;
		Painchance "Dashing", 0;
		ProjectilePassHeight 32;
		//$Sprite "BAR1A0"
	}
	
	States
	{
		Spawn:
			TNT1 AA 6;
			Loop;
		Death:
			MISL B 5 BRIGHT;
			MISL B 5 Bright
			{
				A_Scream();
				A_Quake(1, 4, 0, 512, "nosound/silent");
				A_Quake(4, 4, 0, 256, "nosound/silent");
				A_AlertMonsters();
			}
			MISL C 5 BRIGHT;
			MISL C 10 BRIGHT 
			{
				A_Explode(128,128,XF_HURTSOURCE,false,0,0,10,"BulletPuff","Explosive");
			}
			MISL D 10 BRIGHT;
			stop;
	}
}

//InfernoDemon
class Infernal : KCCreature
{
	default
	{
		Health 15000;
		Speed 42;
		Radius 60;
		Height 140;
		Mass 5000;
		Damage 40;
		Monster;
		PainChance 10;
		Scale 2.0;
		+MISSILEMORE;
		+MISSILEEVENMORE;
		+BOSS;
		+FLOORCLIP;
		+TELESTOMP;
		+DONTMORPH;
		+NOTARGET;
		+NOICEDEATH;
		MaxDropOffHeight 512;
		damagefactor "Blood", 0.0;
		damagefactor "BlueBlood", 0.0;
		damagefactor "GreenBlood", 0.0;
		damagefactor "Shrapnel", 0.0;
		damagefactor "Inferno", 0;
		SeeSound "Infdem/see";
		PainSound "Infdem/pain";
		DeathSound "Infdem/death";
		ActiveSound "Infdem/active";
		Obituary "%o was sent to burn in the fires of hell by an Inferno Demon.";
	}
	
	States
	{
		Spawn:
			DIAA A 5 A_Look();
			Loop;
		See:
			DIAA A 2;
			TNT1 A 0 ACS_ExecuteAlways(33, 0, 0, 0, 0);
		Chase:
			DIAA A 2;
			DIAA A 0 A_StartSound("inferno/step", 5);
			DIAA A 0 Radius_Quake(10,5,0,10,0);
			DIAA A 6 A_Chase();
			DIAA B 6 A_Chase();
			DIAA A 0 A_StartSound("inferno/step", 5);
			DIAA C 0 Radius_Quake(10,5,0,10,0);
			DIAA C 6 A_Chase();
			DIAA D 6 A_Chase();
			TNT1 A 0 A_CheckSight("Meteor");
			Goto Chase;
		Missile:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfCloser(400, "Stomp");
			TNT1 A 0 A_Jump(128, "FireBall");
			TNT1 A 0 A_Jump(64, "sTOMP");
			Goto Meteor;
		
		Fireball:
			DIAA E 10 A_FaceTarget();
			TNT1 A 0 A_SpawnProjectile("InfernoDemonFireball",random (90, 180), 90);
			DIAA F 10 A_FaceTarget();
			
			DIAA E 10 A_FaceTarget();
			TNT1 A 0 A_SpawnProjectile("InfernoDemonFireball",random (90, 180), -90);
			DIAA F 10 A_FaceTarget();
			
			DIAA E 10 A_FaceTarget();
			TNT1 A 0 A_SpawnProjectile("InfernoDemonFireball",random (90, 180), 90);
			DIAA F 10 A_FaceTarget();
			
			DIAA E 10 A_FaceTarget();
			TNT1 A 0 A_SpawnProjectile("InfernoDemonFireball",random (90, 180), -90);
			DIAA F 10 A_FaceTarget();
			Goto Chase;
		
		
		Meteor:
			DIAA E 5 A_FaceTarget();
			DIAA G 5 BRIGHT A_SpawnProjectile("InfernoDemonMETEOR",200, 90);
			DIAA H 5 A_FaceTarget();
			
			DIAA E 5 A_FaceTarget();
			DIAA G 5 BRIGHT A_SpawnProjectile("InfernoDemonMETEOR",200, -90);
			DIAA H 5 A_FaceTarget();
			
			DIAA E 5 A_FaceTarget();
			DIAA G 5 BRIGHT A_SpawnProjectile("InfernoDemonMETEOR",200, 90);
			DIAA H 5 A_FaceTarget();
			
			DIAA E 5 A_FaceTarget();
			DIAA G 5 BRIGHT A_SpawnProjectile("InfernoDemonMETEOR",200, -90);
			DIAA H 5 A_FaceTarget();
			
			DIAA E 5 A_FaceTarget();
			DIAA G 5 BRIGHT A_SpawnProjectile("InfernoDemonMETEOR",200, 90);
			DIAA H 5 A_FaceTarget();
			DIAA H 20 A_FaceTarget();
			Goto Chase;
		
		Stomp:
			DIAA B 20 Bright A_FaceTarget();
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,0,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,20,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,40,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,60,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,80,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,-20,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,-40,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,-60,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,-80,2,0);
			DIAA C 0 Radius_Quake(20,35,0,40,0);
			DIAA C 20 Bright;
			DIAA B 20 Bright A_FaceTarget();
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,0,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,20,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,40,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,60,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,80,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,-20,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,-40,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,-60,2,0);
			DIAA B 0 Bright A_SpawnProjectile("InfernoDemonFireBeam",0,0,-80,2,0);
			DIAA C 0 Radius_Quake(20,35,0,40,0);
			DIAA C 20 Bright;
			Goto Chase;
		Pain:
			DIAA A 0 A_Pain();
			Goto Chase;
		Death:
			tnt1 A 0 A_Scream();
			DIAA IJKJKJKJ 5;
			DIAA K 5 A_FaceTarget();
			DIAA L 5 A_Scream();
			DIAA MNOPQ 5;
			tnt1 a 0 Radius_Quake(5,200,0,5,0);
			DIAA PQRQPQRQPQR 4;
			DIAA R 5 A_NoBlocking();
			DIAA R 5;
			DIAA R 100;
			DIAA R 0 
			{
				if (level.mapname == "MAP21") A_BrainDie();
			}
			DIAA R -1;
			Stop;
	}
}

